{
	"info": {
		"_postman_id": "your-unique-id-here",
		"name": "MultiAgentsBeta API",
		"description": "API collection for testing MultiAgentsBeta chat functionality with Azure AI Agent integration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Chat - New Session",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sessionId\": \"\",\n  \"message\": \"Hello, how can you help me today?\",\n  \"agentThreadId\": \"\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/agent/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"agent",
						"chat"
					]
				},
				"description": "Send a chat message and get agent response. Leave sessionId empty for new session. Optional agentThreadId can be provided to continue an existing Azure AI Agent thread. Returns comprehensive token management statistics including:\n- sessionId: Session identifier\n- message: Agent response content\n- role: Message role (Assistant)\n- timestamp: Response timestamp\n- tokenCount: Tokens used for this response\n- isNewSession: Whether this created a new session\n- totalMessageCount: Total messages in session\n- totalTokenCount: Total tokens used in session\n- maxTokens: Maximum tokens allowed (4000)\n- remainingTokens: Remaining token capacity\n- tokenUsagePercentage: Percentage of tokens used"
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Extract session ID from response and store it in collection variable",
							"if (pm.response.code === 200) {",
							"    const responseJson = pm.response.json();",
							"    if (responseJson.sessionId) {",
							"        pm.collectionVariables.set(\"sessionId\", responseJson.sessionId);",
							"        console.log(\"Session ID stored:\", responseJson.sessionId);",
							"        console.log(\"Token usage:\", responseJson.tokenUsagePercentage + \"%\");",
							"        console.log(\"Remaining tokens:\", responseJson.remainingTokens);",
							"    } else {",
							"        console.log(\"No session ID found in response\");",
							"    }",
							"} else {",
							"    console.log(\"Request failed with status:\", pm.response.code);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Chat - Continue Session",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sessionId\": \"{{sessionId}}\",\n  \"message\": \"Continue our conversation\",\n  \"agentThreadId\": \"\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/agent/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"agent",
						"chat"
					]
				},
				"description": "Send a chat message using the session ID stored from the first Chat request. Optional agentThreadId can be provided to continue an existing Azure AI Agent thread. Returns comprehensive token management statistics including total message count, total token usage, remaining tokens, and usage percentage."
			}
		},
		{
			"name": "Chat - With Agent Thread ID",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"sessionId\": \"{{sessionId}}\",\n  \"message\": \"Continue with specific agent thread\",\n  \"agentThreadId\": \"thread_abc123xyz\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/agent/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"agent",
						"chat"
					]
				},
				"description": "Example of using a specific Azure AI Agent Thread ID to continue a conversation. The agentThreadId parameter allows you to maintain context with a specific Azure AI Agent thread, enabling more sophisticated multi-turn conversations with persistent context."
			}
		},
		{
			"name": "Get Session",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/agent/sessions/{{sessionId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"agent",
						"sessions",
						"{{sessionId}}"
					]
				},
				"description": "Get session details by session ID including:\n- Session metadata (ID, creation time, last activity)\n- Message count and token usage statistics\n- Activity status (active/inactive)\n- Token limits and remaining capacity"
			}
		},
		{
			"name": "Deactivate Session",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/agent/sessions/{{sessionId}}/deactivate",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"agent",
						"sessions",
						"{{sessionId}}",
						"deactivate"
					]
				},
				"description": "Deactivate a chat session to prevent further messages. This marks the session as inactive but preserves the conversation history."
			}
		},
		{
			"name": "Test CORS",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/test/cors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"test",
						"cors"
					]
				},
				"description": "Test CORS configuration to verify frontend can call the API successfully. Returns origin information and timestamp."
			}
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/test/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"test",
						"health"
					]
				},
				"description": "Check API health status and environment information. Returns service status, timestamp, and current environment."
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5107",
			"type": "string",
			"description": "Base URL for the API (HTTP)"
		},
		{
			"key": "baseUrlHttps",
			"value": "https://localhost:7148",
			"type": "string",
			"description": "Base URL for the API (HTTPS)"
		},
		{
			"key": "baseUrlAlternative",
			"value": "http://localhost:5108",
			"type": "string",
			"description": "Alternative base URL for the API"
		},
		{
			"key": "sessionId",
			"value": "session_123456",
			"type": "string",
			"description": "Session ID automatically stored from the first Chat request"
		},
		{
			"key": "agentThreadId",
			"value": "",
			"type": "string",
			"description": "Azure AI Agent Thread ID for maintaining conversation context"
		}
	]
}
