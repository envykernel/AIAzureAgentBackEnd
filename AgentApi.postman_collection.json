{
	"info": {
		"_postman_id": "your-unique-id-here",
		"name": "MultiAgentsBeta API",
		"description": "API collection for testing MultiAgentsBeta chat functionality with Azure AI Agent integration. Features automatic agentThreadId management for seamless conversation continuity.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Chat - New Conversation",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"message\": \"Hello, how can you help me today?\",\n  \"agentThreadId\": null\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/agent/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"agent",
						"chat"
					]
				},
				"description": "Start a new conversation with the AI agent. Leave agentThreadId empty or null for a new conversation. Returns:\n- message: Agent response content\n- role: Message role (Assistant)\n- timestamp: Response timestamp\n- tokenCount: Tokens used for this response\n- agentThreadId: Azure AI Agent Thread ID for continuing conversation\n- totalTokenCount: Total tokens used (currently 0)\n- maxTokens: Maximum tokens allowed (currently 0)\n- remainingTokens: Remaining token capacity (currently 0)\n- tokenUsagePercentage: Percentage of tokens used (currently 0)"
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Extract agentThreadId from response and store it in collection variable",
							"if (pm.response.code === 200) {",
							"    const responseJson = pm.response.json();",
							"    if (responseJson.agentThreadId) {",
							"        pm.collectionVariables.set(\"agentThreadId\", responseJson.agentThreadId);",
							"        console.log(\"Agent Thread ID stored:\", responseJson.agentThreadId);",
							"        console.log(\"Agent response:\", responseJson.message);",
							"        console.log(\"Token count:\", responseJson.tokenCount);",
							"    } else {",
							"        console.log(\"No agentThreadId found in response\");",
							"    }",
							"} else {",
							"    console.log(\"Request failed with status:\", pm.response.code);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Chat - Continue Conversation",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"message\": \"Continue our conversation\",\n  \"agentThreadId\": \"{{agentThreadId}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/agent/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"agent",
						"chat"
					]
				},
				"description": "Continue the conversation using the agentThreadId from the previous response. The agentThreadId is automatically filled from the collection variable set by the first request. This maintains conversation context with Azure AI Agent."
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Update agentThreadId if it changed in the response",
							"if (pm.response.code === 200) {",
							"    const responseJson = pm.response.json();",
							"    if (responseJson.agentThreadId) {",
							"        pm.collectionVariables.set(\"agentThreadId\", responseJson.agentThreadId);",
							"        console.log(\"Agent Thread ID updated:\", responseJson.agentThreadId);",
							"        console.log(\"Agent response:\", responseJson.message);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Chat - With Specific Thread ID",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"message\": \"Continue with specific agent thread\",\n  \"agentThreadId\": \"{{agentThreadId}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/agent/chat",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"agent",
						"chat"
					]
				},
				"description": "Example of using the stored Azure AI Agent Thread ID to continue a conversation. The agentThreadId is automatically filled from the collection variable, enabling persistent multi-turn conversations with Azure AI Agent context."
			}
		},
		{
			"name": "Test CORS",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/test/cors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"test",
						"cors"
					]
				},
				"description": "Test CORS configuration to verify frontend can call the API successfully. Returns origin information and timestamp."
			}
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/test/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"test",
						"health"
					]
				},
				"description": "Check API health status and environment information. Returns service status, timestamp, and current environment."
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5107",
			"type": "string",
			"description": "Base URL for the API (HTTP)"
		},
		{
			"key": "baseUrlHttps",
			"value": "https://localhost:7148",
			"type": "string",
			"description": "Base URL for the API (HTTPS)"
		},
		{
			"key": "baseUrlAlternative",
			"value": "http://localhost:5108",
			"type": "string",
			"description": "Alternative base URL for the API"
		},
		{
			"key": "agentThreadId",
			"value": "",
			"type": "string",
			"description": "Azure AI Agent Thread ID automatically stored from chat responses for maintaining conversation context"
		}
	]
}
